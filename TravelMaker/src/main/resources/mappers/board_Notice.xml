<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="mapper.boardNotice">

	<!--  테이블 컬럼하고 VO하고 1:1 맵핑했을 때 이름이 다르면 안됌. -->
   <resultMap id="noticeResult" type="NoticeVO">
      <result property="count" column="count" />
      <result property="noticeNO" column="noticeNO" />
      <result property="title" column="title" />
      <result property="content" column="content" />
      <result property="adminID" column="adminID" />
      <result property="name" column="name" />
      <result property="writeDate" column="writeDate" />
   </resultMap>
   
	<select id="selectAllNotice" resultMap="noticeResult" >
		SELECT * FROM
		 (SELECT ROW_NUMBER()over(ORDER BY noticeNO DESC) count,noticeNO ,title,content,adminID,name, writeDate
		  FROM notice r)  r2
	</select>
	
	<select id="selectPageNotice" resultType="NoticeVO">
		SELECT * FROM
		 (SELECT ROW_NUMBER()over(ORDER BY noticeNO DESC) count,noticeNO ,title,content,adminID,name, writeDate
		  FROM notice r)  r2 WHERE r2.count BETWEEN #{x} AND #{y}
	</select>
	
	<select id="selectOneNotice" resultType="NoticeVO"> 
		SELECT NOTICENO, TITLE, CONTENT, ADMINID, NAME, WRITEDATE
		 FROM NOTICE
		 where noticeNO=#{noticeNO}
	</select>
	
	<select id="selectMaxNotice" resultType="java.lang.Integer"> 
		SELECT max(noticeNO)
		 FROM NOTICE
	</select>
	
	<insert id="insertNotice" parameterType="NoticeVO">
		INSERT INTO NOTICE (NOTICENO, TITLE, CONTENT, ADMINID, NAME, WRITEDATE)
		 VALUES((SELECT nvl(MAX(NOTICENO) ,0)+1 FROM NOTICE), #{title}, #{content}, #{adminID}, #{name}, sysdate)
	</insert>
	
	<update id="updateNotice" parameterType="NoticeVO">
		UPDATE NOTICE SET TITLE=#{title}, CONTENT=#{content}
		 WHERE NOTICENO=#{noticeNO}
	</update>
	
	<delete id="deleteNotice" parameterType="NoticeVO"> 
		DELETE FROM NOTICE
		 where noticeNO=#{noticeNO} 
	</delete>
	
	<select id="selectCategory" resultType="NoticeVO" parameterType="java.lang.String">
		SELECT NOTICENO, TITLE, CONTENT, ADMINID, NAME, WRITEDATE
		 FROM NOTICE
		 where name=#{key}
		 order by noticeNO desc
	</select>
	
	<select id="selectNoticeAll" resultType="NoticeVO" >
		SELECT * FROM NOTICE
	</select>
	
	<select id="selectUnion" resultType="NoticeVO" >
		SELECT * FROM (SELECT ROW_NUMBER()OVER(ORDER BY name) as count ,noticeNO,title,name FROM 
		(SELECT noticeNO,title,name FROM (SELECT NOTICENO ,title,name FROM NOTICE n
           	UNION ALL
        SELECT promotionNO,title,name FROM PROMOTION p) 
			UNION ALL
		SELECT REVIEWNO NO,title,name FROM (SELECT reviewNO,title,name FROM REVIEW r 
            UNION ALL
         SELECT travelNO,title ,name FROM TRAVEL t))) aa WHERE aa.count BETWEEN #{x} AND #{y}
	</select>
	
	<select id="selectUnionSearchAll" resultMap="noticeResult" >
		SELECT * 
		FROM (SELECT ROW_NUMBER()OVER(ORDER BY name) as count,name,adminid,title,content,noticeNO 
		FROM (SELECT name,adminid,title,content,noticeNO 
		FROM (SELECT name,adminid,title,content,noticeNO 
		FROM (SELECT name,adminid,title,content,noticeNO 
		FROM NOTICE n
		UNION ALL
		SELECT name,sellerid,title,content,promotionNO 
		FROM PROMOTION p) 
		UNION ALL
		SELECT name,id,title,content,reviewNO 
		FROM (SELECT name,id,title,content,reviewNO 
		FROM REVIEW r 
		UNION ALL
		SELECT name,id,title,content,travelNO FROM TRAVEL t)))) minsu 
	</select>
	
	<select id="selectUnionSearchID" resultMap="noticeResult" parameterType='java.lang.String'>

		SELECT ROW_NUMBER()over(ORDER BY name) AS count,name,adminid,title,content,noticeNO 
		FROM (SELECT * 
		FROM (SELECT ROW_NUMBER()OVER(ORDER BY name) as count,name,adminid,title,content,noticeNO 
		FROM (SELECT name,adminid,title,content,noticeNO 
		FROM (SELECT name,adminid,title,content,noticeNO 
		FROM (SELECT name,adminid,title,content,noticeNO 
		FROM NOTICE n
		UNION ALL
		SELECT name,sellerid,title,content,promotionNO 
		FROM PROMOTION p) 
		UNION ALL
		SELECT name,id,title,content,reviewNO 
		FROM (SELECT name,id,title,content,reviewNO 
		FROM REVIEW r 
		UNION ALL
		SELECT name,id,title,content,travelNO FROM TRAVEL t)))) minsu WHERE adminid=#{result})
	</select>
	
</mapper>